name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pylint black

      - name: Run Pylint
        run: |
          pylint --rcfile=.pylintrc server/py > pylint-log.txt
        continue-on-error: true

      - name: Run Flake8
        run: |
          flake8 server/py --statistics > flake8-log.txt
        continue-on-error: true

      - name: Run Black
        run: |
          black --check . > black-log.txt
        continue-on-error: true

      - name: Upload Linting Logs
        uses: actions/upload-artifact@v3
        with:
          name: lint-logs
          path: |
            pylint-log.txt
            flake8-log.txt
            black-log.txt
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run Unit Tests
        run: |
          pytest --junitxml=test-results.xml || true

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results.xml

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  # TODO step for later.
  #  deploy-job:
  #    # add missing code
  #    permissions:
  #      contents: 'read'
  #      id-token: 'write'
  #    runs-on:  ubuntu-latest
  #    steps:
  #      # add missing steps
  #      - name: Authenticate Google Cloud
  #        uses: google-github-actions/auth@v2
  #        with:
  #          service_account: "Google Cloud Service Account (see Google Team Spreadsheet)"
  #          project_id: "Google Cloud project id (see Google Team Spreadsheet)"
  #          workload_identity_provider: "Google Cloud Workload Identity Provider (see Google Team Spreadsheet)"
  #      # add missing steps
